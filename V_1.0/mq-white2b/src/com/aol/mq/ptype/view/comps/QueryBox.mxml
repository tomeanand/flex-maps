<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/halo" creationComplete="creationCompleteHandler(event)" height="34">
	
	<fx:Script>
		<![CDATA[
			import com.aol.mq.ptype.controller.MapManger;
			import com.aol.mq.ptype.events.WinstonEvent;
			import com.aol.mq.ptype.model.ModelLocator;
			import com.aol.mq.ptype.utils.Constant;
			import com.mapquest.services.geocode.GeocoderLocation;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;

			public var index:Number = 0 ;
			
			public var isRoute:Boolean = false;
			[Bindable]
			public var lastItem:Boolean;
			[Bindable]
			public var bgColor:uint = 0xFBF8E0
			private var _ambiguities:Array
			
			public var geoLocation:GeocoderLocation;

			public function getText():String	{
				return this.queryTxt.text;
			}
			public function setIcons():void	{
				if(this.index == 0)	{
					this.currentState = ModelLocator.getInstance().isRoute ? "routeState" : ""
						if(this.currentState == "routeState")	{
							this.bottom.visible = ModelLocator.getInstance().isRoute;
							this.top.visible = !ModelLocator.getInstance().isRoute	
							this.close.visible = !ModelLocator.getInstance().isRoute		
						}
				}
				else if(this.lastItem)	{
					if(this.currentState == "routeState")	{
					this.bottom.visible = false;
					}
				}
				else	{
				}
				
			}
			
			public function setPoint(count:Number):void	{
				if(count>0) 
				point.text = Constant.ROUTE_POINTS[count].data
			}
			public function setText(query:String):void	{
				this.queryTxt.text = query;
			}
			
			protected function close_clickHandler(event:MouseEvent):void
			{
				MapManger.getInstance().dispatchEvent(new WinstonEvent(Constant.EVENT_DELETE_QUERY,this));
			}

			protected function creationCompleteHandler(event:FlexEvent):void
			{
				this.currentState = isRoute ? "routeState" : "";
				if(this.currentState == "routeState")	{
					top.visible = index == 0 ? false : true;
					point.text = Constant.ROUTE_POINTS[this.index].data
				}
				
			}
			
			public function set ambiguities(am:Array):void	{
				_ambiguities = am;
				if(am.length>1)	{
					queryTxt.addEventListener(MouseEvent.CLICK,onTxtClickEventHandler);
					bgColor = 0xF0C67D;
				}
				if(ModelLocator.getInstance().ambigutiy != null)	{
					ModelLocator.getInstance().ambigutiy.closeBox();
				}
				
			}
			
			public function get ambiguities():Array	{
				return _ambiguities;
			}
			
			private function onTxtClickEventHandler(event:MouseEvent):void	{
				if(ModelLocator.getInstance().ambigutiy != null)	{
					ModelLocator.getInstance().ambigutiy.closeBox();
				}
				if(this.ambiguities.length>1)	{
				var ambiguity = AmbiguitiesBox(PopUpManager.createPopUp(this ,AmbiguitiesBox,false,null));
				ambiguity.holder = this
				ambiguity.ambiguities = this.ambiguities;
				//ambiguity.width = this.queryTxt.width;
				ambiguity.x = this.queryTxt.x+10;
				ambiguity.y = 160+this.y;
				
				//Alert.show("--"+this.y)
					
				ModelLocator.getInstance().ambigutiy = ambiguity as AmbiguitiesBox
				}
				
			
				//var popUp:IFlexDisplayObject = PopUpManager.createPopUp(this ,AmbiguitiesBox,true,null);
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="start"/>
		<s:State name="routeState"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Border x="2" id="bg" height="34" width="99%" borderAlpha="0" backgroundColor="{bgColor}" backgroundAlpha="0.5"/>
	
	<mx:Image id="bottom" source="assets/images/mq-white2b/topConnect.png" width="15" height="11" includeIn="routeState" x="337" y="23" visible="{!lastItem}"/>
	<mx:Image id="top" source="assets/images/mq-white2b/bottomConnect.png" width="15" height="11" includeIn="routeState" x="337" y="0"/>
	<mx:Image id="star" source="assets/images/mq-white2b/stop.gif" width="28" height="28" includeIn="routeState" x="2" y="3"/>
	<s:TextInput id="queryTxt" skinClass="skins.SearchInputText"  x="34" y="5"/>
	<mx:Image id="close" source="assets/images/mq-white2b/closeBtn.png" visible="{bgColor == 0xFBF8E0}" click="close_clickHandler(event)"
			  useHandCursor="true" buttonMode="true" includeIn="routeState" x="321" y="8"/>
	<mx:Image id="alert" visible="{bgColor == 0xF0C67D}" source="assets/images/mq-white2b/alert.png" width="16" height="16" click="close_clickHandler(event)" x="302" y="9" includeIn="routeState"/>
	<s:Label includeIn="routeState" x="13" y="12" text="A" id="point" fontWeight="bold" fontSize="11" color="#FCFCFC"/>
	
	
</s:Group>
